/*
 * ClassifyingDialog.java
 *
 * Created on 1. MÃ¤rz 2006, 12:39
 *
 */

package org.rosuda.JClaR;

import java.awt.Frame;
import java.text.NumberFormat;
import javax.swing.JCheckBox;
import javax.swing.JEditorPane;

/**
 *
 * @author tobias
 */
public final class ClassifyingDialog extends ListeningDialog implements SimpleChangeListener {
    private static final int MAXIMUM_FRACTION_DIGITS = 5;
    /**
     * FIXME: serialVersionUID field auto-generated by RefactorIT
     */
    static final long serialVersionUID = 200602231328L;
    
    private final JEditorPane jepClassifyingResults;    
    private final JCheckBox jcbAutoReclassify;    
    private Classifier classifier;
    
    private final NumberFormat numberFormat;    
    
    /** Creates a new instance of ClassifyingDialog */
    ClassifyingDialog(final Frame parent, final boolean modal, final Classifier classifier) {
        super(parent,modal);
        
        setUpdateButton(false);
        setOkButtonText("Classify",'c');
        
        this.classifier = classifier;
        
        jepClassifyingResults = new JEditorPane();
        jepClassifyingResults.setEditable(false);
        addCenterComponent(jepClassifyingResults);
        
        jcbAutoReclassify = new JCheckBox("reclassify automatically",true);
        addComponent(jcbAutoReclassify);
        
        numberFormat = NumberFormat.getNumberInstance();
        numberFormat.setMaximumFractionDigits(MAXIMUM_FRACTION_DIGITS);
        
        updateInfo();
        pack();
    }
    
    void ok() {
        classifier.reclassify();
        updateInfo();
    }
    
    public void stateChanged(final SimpleChangeEvent e) {
        updateInfo();
    }
    
    private void updateInfo() {
        StringBuffer info= new StringBuffer();
        
        if(classifier.hasAccuracyOfPrediction()){
            info.append("Accuracy: ").append(numberFormat.format(classifier.getAccuracyOfPrediction()));
        } else{
            info.append("No information available.");
        }
        
        jepClassifyingResults.setText(info.toString());
    }
    
    boolean autoReclassify() {
        return jcbAutoReclassify.isSelected();
    }
}
